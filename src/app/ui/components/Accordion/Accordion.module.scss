.root {
  height: fit-content;
  max-height: 80%;

  .link {
    width: calc(100% - 1em - 3px);
    padding-left: 1em;
    height: 2em;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: background-color $menu_transition, color $menu_transition;
    text-wrap: nowrap;

    @include hover {
      transition: unset;
      background-color: var(--highlight-colour-alternate2);
      color: var(--text-colour-alternate);
    }
  }

  .selectedAlbum {
    background-color: var(--highlight-colour-alternate3);
    border-top: 1px solid var(--highlight-colour-alternate4);
    border-bottom: 1px solid var(--highlight-colour-alternate4);
  }

  :not(.baseItem) .link {
    width: calc(100% - 2em);
    padding-left: 2em;
  }

  .openRootExpandingLayer {
    border: 3px solid var(--border-colour-base);
    border-radius: $default_border_radius;
  }

  .expandingLayerContainer {
    overflow: hidden;

    :first-child {
      .sectionLabel {
        transition: padding-left $menu_transition;
      }
    }

    .sectionLabel {
      height: 2em;
      display: flex;
      justify-content: space-between;
      padding-left: 1em;
      cursor: pointer;
      align-items: center;
      text-wrap: nowrap;

      transition: background-color $menu_transition, color $menu_transition;

      @include hover {
        // transition: unset;
        background-color: var(--highlight-colour-alternate2);
        color: var(--text-colour-alternate);
      }
    }

    .isOpenLabel {
      background-color: var(--highlight-colour-alternate2);
      color: var(--text-colour-alternate);
    }

    .expandingLayer {
      display: flex;
      flex-direction: column;
    }

    .isOpenList {
      background-color: var(--highlight-colour-base-opaque1);

      .expandingLayerContainer {
        .sectionLabel {
          padding-left: 2em;
        }
      }
    }
  }

  // Hide section labels and links when sibling label is opened:
  // Target .sectionLabel if its parent .expandingLayerContainer is not .baseItem
  // and its parents's sibling has a child with .isOpenLabel
  :not(.baseItem) {
    .expandingLayerContainer:has(~ .expandingLayerContainer > .isOpenLabel),  // target .expandingLayerContainer if it is followed by an .expandingLayerContainer that has child with .isOpenLabel
    .expandingLayerContainer:has(> .isOpenLabel) ~ .expandingLayerContainer, // target .expandingLayerContainers following an .expandingLayerContainer that has child with .isOpenLabel
    .link:has(~ .expandingLayerContainer > .isOpenLabel),  // target .link if it is followed by an .expandingLayerContainer that has child with .isOpenLabel
    .expandingLayerContainer:has(> .isOpenLabel) ~ .link // target .link following an .expandingLayerContainer that has child with .isOpenLabel
    {
      display: none; // This affects the link elements

      .sectionLabel {
        display: none;
      }
    }
  }
}
